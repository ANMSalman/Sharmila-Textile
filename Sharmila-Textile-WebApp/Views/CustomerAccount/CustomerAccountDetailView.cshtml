@using Sharmila_Textile_WebApp.HtmlEntities
@if (ViewBag.IsUpdate == "true") {
    @model Sharmila_Textile_WebApp.ViewModel.CustomerAccountViewModel
}

@{
    ViewData["Title"] = "Customer Accounts Detail View";
}


<nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top">
    <div class="container-fluid">
        <div class="navbar-wrapper">
            <nav aria-label="breadcrumb" role="navigation">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item active"><a asp-action="CustomerAccountListView">Customer Account</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.breadCumValue</li>
                </ol>
            </nav>
        </div>
        <button class="navbar-toggler" type="button" data-toggle="collapse" aria-controls="navigation-index" aria-expanded="false" aria-label="Toggle navigation">
            <span class="sr-only">Toggle navigation</span>
            <span class="navbar-toggler-icon icon-bar"></span>
            <span class="navbar-toggler-icon icon-bar"></span>
            <span class="navbar-toggler-icon icon-bar"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end">
            <form class="navbar-form">
                <div class="input-group no-border">
                    <input type="text" value="" class="form-control" placeholder="Search...">
                    <button type="button" class="btn btn-white btn-round btn-just-icon">
                        <i class="material-icons">search</i>
                        <div class="ripple-container"></div>
                    </button>
                </div>
            </form>
            <ul class="navbar-nav">
                <li class="nav-item dropdown">
                    <a class="nav-link" href="http://example.com" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">notifications</i>
                        @* <span class="notification">5</span> *@
                        <p class="d-lg-none d-md-block">
                            Some Actions
                        </p>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="#">Mike John responded to your email</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#pablo" id="navbarDropdownProfile" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">person</i>
                        <p class="d-lg-none d-md-block">
                            Account
                        </p>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownProfile">
                        <a class="dropdown-item" href="#">Profile</a>
                        <a class="dropdown-item" href="#">Settings</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" asp-controller="Login" asp-action="Logout">Log out</a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <hr />
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card h-100">
                    <div class="card-header card-header-primary">
                        <h4 class="card-title">Customer Account Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="row h-100">
                            <div class="col-md-4 mt-3">
                                <div class="form-group">
                                    <label for="txtAmount">In-Hand Cash</label>
                                    <input type="number" class="form-control number-validation" id="txtInHandCash" asp-for="InHandCash">
                                    <div class="text-danger" id="errorInHandCash"></div>
                                </div>
                            </div>
                            <div class="col-md-4 mt-3">
                                <div class="form-group">
                                    <label for="txtAmount">Amount</label>
                                    <input type="number" class="form-control number-validation" id="txtAmount" asp-for="Amount" onkeyup="calculateGrandTotal();">
                                    <div class="text-danger" id="errorAmount"></div>
                                </div>
                            </div>
                            <div class="col-md-4 mt-3">
                                <div class="form-group">
                                    <label for="dtpDate">Date</label>
                                    <input type="date" class="form-control" id="dtpDate" asp-for="Date" value="@if (ViewBag.IsUpdate != "true") {
                                                                                                                   @DateTime.Now.ToString("yyyy-MM-dd");
                                                                                                               }else {
                                                                                                                   @Model.Date.ToString("yyyy-MM-dd");
                                                                                                               }">
                                    <div class="text-danger" id="errorDate"></div>
                                </div>
                            </div>
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtDescription">Description</label>
                                    <input type="text" class="form-control" id="txtDescription" asp-for="Description">
                                    <div class="text-danger" id="errorDescription"></div>
                                </div>
                            </div>
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtRemark">Remark</label>
                                    <input type="text" class="form-control" id="txtRemark" asp-for="Remark">
                                    <div class="text-danger" id="errorRemark"></div>
                                </div>
                            </div>

                            <div class="col-md-3" id="pnlCustomerList">
                                <div class="form-group">
                                    <label for="drpDwnCustomer" class="mb-0">Select a Customer</label>
                                    <div class="dropdown">
                                        <button class="btn btn-block btn-info text-capitalize dropdown-toggle pt-1 pb-1" type="button" data-toggle="dropdown"
                                                data-btn="@Html.Raw(ViewBag.IsUpdate == "true" ? Model.CustomerId : Model.CustomerList[0].CustomerId)" id="drpDwnCustomer" aria-haspopup="true" aria-expanded="false">

                                            <strong>@Html.Raw(ViewBag.IsUpdate == "true" ? Model.CustomerId : Model.CustomerList[0].CustomerId) - </strong>@Html.Raw(ViewBag.IsUpdate == "true" ? Model.CustomerList.Single(x => x.CustomerId == Model.CustomerId).CustomerName : Model.CustomerList[0].CustomerName)

                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                            @foreach (var item in Model.CustomerList) {
                                                <a class="dropdown-item drpDwnCustomer cursor-pointer" href="#" data-li="@item.CustomerId"><strong>@item.CustomerId</strong> - @item.CustomerName</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3" id="pnlAccountTypeList">
                                <div class="form-group">
                                    <label for="drpDwnAccountType" class="mb-0">Select an Account Type</label>
                                    <button class="btn btn-block btn-info text-capitalize dropdown-toggle pt-1 pb-1" type="button" data-toggle="dropdown"
                                            data-btn="@Html.Raw(ViewBag.IsUpdate == "true" ? Model.AccountType : "Bill")" id="drpDwnAccountType" aria-haspopup="true" aria-expanded="false">
                                        @Html.Raw(ViewBag.IsUpdate == "true" ? Miscellaneous.SplitCamelCase(Model.AccountType) : "Bill")
                                    </button>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                        <a class="dropdown-item drpDwnAccountType cursor-pointer" href="#" data-li="Bill">Bill</a>
                                        <a class="dropdown-item drpDwnAccountType cursor-pointer" href="#" data-li="Loan">Loan</a>
                                        <a class="dropdown-item drpDwnAccountType cursor-pointer" href="#" data-li="ChequeReturned">Cheque Returned</a>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-auto ml-auto my-auto" id="pnlChequeModalButtons">
                                <button class="btn btn-success text-capitalize" data-toggle="modal" data-target="#modalOwnCheque">Add Own Cheques</button>
                                <button class="btn btn-success text-capitalize" data-toggle="modal" data-target="#modalThirdPartyCheque">Add Third-Party Cheques</button>
                            </div>

                            <!-------------------------------------------  Button Section ----------------------------------------->
                            <div class="col-md-12 mt-3">
                                <div class="row justify-content-end">
                                    <div class="col-auto form-inline" id="progressBar">
                                        <img src="~/img/progress.gif" style="max-height: 41px;" class="mr-3" />
                                        <h5 class="align-bottom mb-0">Please Wait....</h5>
                                    </div>
                                    <div class="col-auto">
                                        @if (ViewBag.IsUpdate == "true") {
                                            <button type="button" class="btn btn-danger" onclick="deleteConfirmation()">Delete</button>
                                        }
                                        else {
                                            <button type="button" class="btn btn-primary" onclick="getFieldDetails()">Submit</button>
                                        }
                                    </div>
                                </div>
                            </div>
                            <pre id="txtJson" style="font-size: 20px; font-weight: bold;">  </pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalOwnCheque" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Own Cheque</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="txtOwnChequeCode">Type Cheque Code</label>
                                <input type="text" class="form-control" id="txtOwnChequeCode">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button type="button" class="btn btn-success m-0" onclick="AddOwnChequeToList()">
                                <i class="material-icons">add</i>Add
                            </button>
                        </div>
                    </div>
                    <div class="row">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <td class="font-weight-bold" width="10%">#</td>
                                    <td class="font-weight-bold" width="35%">Cheque Code</td>
                                    <td class="font-weight-bold" width="35%">Amount</td>
                                    <td class="font-weight-bold text-center" width="30%">Remove</td>
                                </tr>
                            </thead>
                            <tbody id="ownChequeTableList">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row w-100 mr-0">
                    <div class="col-auto my-auto">
                        <h5 class="text-danger font-weight-bold float-left my-auto text-capitalize" id="lblErrorOwnCheque"></h5>
                    </div>
                    <div class="col-auto ml-auto">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modalThirdPartyCheque" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Third Party Cheque</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="txtThirdPartyChequeCode">Type Cheque Code</label>
                                <input type="text" class="form-control" id="txtThirdPartyChequeCode">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button type="button" class="btn btn-success m-0" onclick="AddThirdPartyChequeToList()">
                                <i class="material-icons">add</i>Add
                            </button>
                        </div>
                    </div>
                    <div class="row">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <td class="font-weight-bold" width="10%">#</td>
                                    <td class="font-weight-bold" width="35%">Cheque Code</td>
                                    <td class="font-weight-bold" width="35%">Amount</td>
                                    <td class="font-weight-bold text-center" width="30%">Remove</td>
                                </tr>
                            </thead>
                            <tbody id="thirdPartyChequeTableList">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row w-100 mr-0">
                    <div class="col-auto my-auto">
                        <h5 class="text-danger font-weight-bold float-left my-auto text-capitalize" id="lblErrorThirdPartyCheque"></h5>
                    </div>
                    <div class="col-auto ml-auto">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var model = {};
    var ownChequeList = [];
    var thirdPartyChequeList = [];
    var ownChequeModel = {}
    var thirdPartyChequeModel = {}
    var IsUpdate = @ViewBag.IsUpdate;
    var customerId = $("#drpDwnCustomer").data('btn');
    var accountType = $("#drpDwnAccountType").data('btn');
    $('#progressBar').hide();

    if (IsUpdate !== true || "@Model.AccountType" !== "ChequeReturned") {
        $('#pnlChequeModalButtons').hide();
    }

    $("#txtRemark").prop('readonly', true);
    $("#txtInHandCash").prop('readonly', true);

    $(".number-validation").keyup(function () {
        if ($(this).val().length === 0) {
            $(this).val("0");
        };
    });

    $('.drpDwnCustomer').click(function() {
        $(this).parent().siblings('.dropdown-toggle')
            .text($(this).text())
            .data('btn', $(this).data('li'));
        customerId = $("#drpDwnCustomer").data('btn');
    });
    $('.drpDwnAccountType').click(function() {
        $(this).parent().siblings('.dropdown-toggle')
            .text($(this).text())
            .data('btn', $(this).data('li'));
        accountType = $("#drpDwnAccountType").data('btn');
        if (accountType === "ChequeReturned") {
            $('#pnlChequeModalButtons').show();
            $("#txtRemark").prop('readonly', true).val("");
            $("#txtInHandCash").prop('readonly', true).val("0");
        } else if (accountType === "Loan") {
            $('#pnlChequeModalButtons').hide();
            $("#txtRemark").prop('readonly', false);
            $("#txtInHandCash").prop('readonly', false);
        } else {
            $('#pnlChequeModalButtons').hide();
            $("#txtRemark").prop('readonly', true).val("");
            $("#txtInHandCash").prop('readonly', true).val("0");
        }
    });




    //**************** Own Cheque Modal ************************************************************************/
    var ownChequeCount = 0;
    var ownCheques = [];
    var ownChequesView = [];
    @foreach (var item in Model.OwnChequesList) {
        @:ownCheques.push({ "id": @item.OwnChequeId, "code": "@item.ChequeCode", "amount": "@item.Amount" });
        if (ViewBag.IsUpdate == "true") {
            if (Model.OwnChequesId.Contains(item.OwnChequeId)) {
                @:ownChequesView.push({ "id": @item.OwnChequeId, "code": "@item.ChequeCode", "amount": "@item.Amount" });
            }
        }
    }
    if (IsUpdate === true) {
        ownChequeModel = ownChequesView;
    }

    ownChequesView.forEach(function (value) {
        $("#txtOwnChequeCode").val(value.code);
        populateOwnChequeTable(value);
    });

    var ownChequeOptions = {
        data: ownCheques,
        getValue: function(element) {
            return element.code;
        },
        list: {
            match: {
                enabled: true
            },
            sort: {
                enabled: true
            },
            onChooseEvent: function() {
                ownChequeModel = $("#txtOwnChequeCode").getSelectedItemData();
            }
        }
    };



    function AddOwnChequeToList() {
        populateOwnChequeTable(ownChequeModel);
    }


    function populateOwnChequeTable(ownChequeModel) {
        const isCorrect = ownChequeModel.code === $("#txtOwnChequeCode").val();
        const isExist = ownChequeList.filter(u => u.id === ownChequeModel.id);
        $("#lblErrorOwnCheque").text("");

        if (!isCorrect) {
            $("#lblErrorOwnCheque").text("Invalid Cheque Code Selected");
        }else if (isExist.length > 0) {
            $("#lblErrorOwnCheque").text("Cheque Already Exists");
        } else {
            var listHtml = `
                        <tr>
                            <td class="p-1">${ownChequeModel.id}</td>
                            <td class="p-1">${ownChequeModel.code}</td>
                            <td class="p-1">${ownChequeModel.amount}</td>
                            <td class="text-center p-1">
                                <button type="button" rel="tooltip" class="btn btn-danger btn-sm" onclick="removeOwnChequeFromArray(${ownChequeCount})">
                                    <i class="material-icons">clear</i>
                                </button>
                            </td>
                        </tr>
                        `;
            var obj = { count: ownChequeCount, id: ownChequeModel.id,  code: ownChequeModel.code, amount: ownChequeModel.amount, listHtml: listHtml };
            ownChequeList.push(obj);

            $('#ownChequeTableList').html(ownChequeList.map(e => e.listHtml).join(""));
            ownChequeCount++;

        }
        $("#txtOwnChequeCode").val("");
        this.ownChequeModel = {};

    }

    function removeOwnChequeFromArray(chequeNo) {
        ownChequeList = ownChequeList.filter(function (value, index, arr) {
            return value.count !== chequeNo;
        });
        $('#ownChequeTableList').html(ownChequeList.map(e => e.listHtml).join(""));

    }

    //**************** End-------  ************************************************************************/

    //**************** Third Party Cheque Modal ************************************************************************/
    var thirdPartyChequeCount = 0;
    var thirdPartyCheques = [];
    var thirdPartyChequesView = [];
    @foreach (var item in Model.ThirdPartyChequesList) {
        @:thirdPartyCheques.push({ "id": @item.ThirdPartyChequeId, "code": "@item.ChequeCode", "amount": "@item.Amount" });
        if (ViewBag.IsUpdate == "true") {
            if (Model.ThirdPartyChequesId.Contains(item.ThirdPartyChequeId)) {
                @:thirdPartyChequesView.push({ "id": @item.ThirdPartyChequeId, "code": "@item.ChequeCode", "amount": "@item.Amount" });
            }
        }
    }

    if (IsUpdate === true) {
        thirdPartyChequeModel = thirdPartyChequesView;
    }

    thirdPartyChequesView.forEach(function (value) {
        $("#txtThirdPartyChequeCode").val(value.code);
        populateThirdPartyChequeTable(value);
    });

    var thirdPartyChequeOptions = {
        data: thirdPartyCheques,
        getValue: function(element) {
            return element.code;
        },
        list: {
            match: {
                enabled: true
            },
            sort: {
                enabled: true
            },
            onChooseEvent: function() {
                thirdPartyChequeModel = $("#txtThirdPartyChequeCode").getSelectedItemData();
            }
        }
    };

    function AddThirdPartyChequeToList() {
        populateThirdPartyChequeTable(thirdPartyChequeModel);
    }


    function populateThirdPartyChequeTable(thirdPartyChequeModel) {
        const isCorrect = thirdPartyChequeModel.code === $("#txtThirdPartyChequeCode").val();
        const isExist = thirdPartyChequeList.filter(u => u.id === thirdPartyChequeModel.id);
        $("#lblErrorThirdPartyCheque").text("");

        if (isCorrect.length <= 0) {
            $("#lblErrorThirdPartyCheque").text("Invalid Cheque Code Selected");
        } else if (isExist.length > 0) {
            $("#lblErrorThirdPartyCheque").text("Cheque Already Exists");
        } else {
            var listHtml = `
                            <tr>
                                <td class="p-1">${thirdPartyChequeModel.id}</td>
                                <td class="p-1">${thirdPartyChequeModel.code}</td>
                                <td class="p-1">${thirdPartyChequeModel.amount}</td>
                                <td class="text-center p-1">
                                    <button type="button" rel="tooltip" class="btn btn-danger btn-sm" onclick="removeThirdPartyChequeFromArray(${ thirdPartyChequeCount})">
                                        <i class="material-icons">clear</i>
                                    </button>
                                </td>
                            </tr>
                            `;
            var obj = { count: thirdPartyChequeCount, id: thirdPartyChequeModel.id,  code: thirdPartyChequeModel.code, amount: thirdPartyChequeModel.amount, listHtml: listHtml };
            thirdPartyChequeList.push(obj);

            $('#thirdPartyChequeTableList').html(thirdPartyChequeList.map(e => e.listHtml).join(""));
            thirdPartyChequeCount++;

        }
        $("#txtThirdPartyChequeCode").val("");
        this.thirdPartyChequeModel = {};
    }

    function removeThirdPartyChequeFromArray(chequeNo) {
        thirdPartyChequeList = thirdPartyChequeList.filter(function (value, index, arr) {
            return value.count !== chequeNo;
        });
        $('#thirdPartyChequeTableList').html(thirdPartyChequeList.map(e => e.listHtml).join(""));
    }
    //**************** End------- ************************************************************************/


    $(function() {
        $('#txtOwnChequeCode').easyAutocomplete(ownChequeOptions).parent().removeClass("easy-autocomplete").width('100%');
        $('#txtThirdPartyChequeCode').easyAutocomplete(thirdPartyChequeOptions).parent().removeClass("easy-autocomplete").width('100%');
    });

    function getFieldDetails() {
        var amount = $('#txtAmount').val(),
            inHandCash = $('#txtInHandCash').val(),
            date = $('#dtpDate').val(),
            description = $('#txtDescription').val(),
            remark = $('#txtRemark').val(),
            collectionOwnCheques = ownChequeList.map(u => u.id),
            collectionThirdPartyCheques = thirdPartyChequeList.map(u => u.id);

        if (accountType !== "ChequeReturned") {
            collectionOwnCheques = [];
            collectionThirdPartyCheques = [];
        }

        model = {
            "Description": description,
            "Amount": parseFloat(amount),
            "Date": date,
            "InHandCash": parseFloat(inHandCash),
            "AccountType": accountType,
            "CustomerId": customerId,
            "Remark": remark,
            "OwnChequesId": collectionOwnCheques,
            "ThirdPartyChequesId": collectionThirdPartyCheques,
            "CreatedBy": parseInt(localStorage.loggedUser),
            "IsUpdate":false
        };

        $('#txtJson').html(JSON.stringify(model, undefined, 4));
        SaveChanges('Create');
    }

    function SaveChanges(type) {
        $('#progressBar').show();
        $.ajax({
            url: localStorage.apiLink + "api/CustomerAccount/" + type,
            type: 'POST',
            data: JSON.stringify(model),
            contentType: 'application/json',
            success: function (data, textStatus, xhr) {
                $('#progressBar').hide();
                if (data === true) {

                    Swal.fire({
                        title: 'Success',
                        text: "Changes Saved Successfully!",
                        icon: 'success',
                        showCancelButton: false,
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK!'
                    }).then((result) => {
                        if (result.value) {
                            window.location.replace(localStorage.apiLink + "CustomerAccount/CustomerAccountListView");
                        }
                    });
                } else {
                    Swal.fire(
                        'Oops...',
                        'Something went wrong!',
                        'error'
                    );
                }
            },
            error: function (xhr, textStatus, errorThrown) {

            }
        });
    }

    function deleteConfirmation() {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                deletePayment();
            }
        });
    }

    function deletePayment() {
        $.ajax({
            url: localStorage.apiLink + "api/CustomerAccount/Delete/" + @Model.CustomerAccountId,
            type: 'get',
            contentType: 'application/json',
            success: function (data, textStatus, xhr) {
                if (data === true) {
                    window.location.replace(localStorage.apiLink + "CustomerAccount/CustomerAccountListView");
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });
    }

</script>