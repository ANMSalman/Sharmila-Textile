@if (ViewBag.IsUpdate == "true") {
    @model Sharmila_Textile_WebApp.ViewModel.StaffViewModel;
}


@{
    ViewData["Title"] = "StaffDetailView";
}

<nav class="navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top ">
    <div class="container-fluid">
        <div class="navbar-wrapper">
            <nav aria-label="breadcrumb" role="navigation">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="StaffView">Staff</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.breadcumValue</li>
                </ol>
            </nav>
        </div>
        <button class="navbar-toggler" type="button" data-toggle="collapse" aria-controls="navigation-index" aria-expanded="false" aria-label="Toggle navigation">
            <span class="sr-only">Toggle navigation</span>
            <span class="navbar-toggler-icon icon-bar"></span>
            <span class="navbar-toggler-icon icon-bar"></span>
            <span class="navbar-toggler-icon icon-bar"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end">

            <ul class="navbar-nav">
                <li class="nav-item dropdown">
                    <a class="nav-link" href="http://example.com" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">notifications</i>
                        @* <span class="notification">5</span> *@
                        <p class="d-lg-none d-md-block">
                            Some Actions
                        </p>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="#">Mike John responded to your email</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" id="navbarDropdownProfile" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">person</i>
                        <p class="d-lg-none d-md-block">
                            Account
                        </p>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownProfile">
                        <a class="dropdown-item" href="#">Profile</a>
                        <a class="dropdown-item" href="#">Settings</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Log out</a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <hr />
            </div>
        </div>
        <div class="row">
            <div class="col-md-7">
                <div class="card h-100 ">
                    <div class="card-header card-header-primary">
                        <h4 class="card-title">Staff Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="row h-100">
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtStaffName">Staff Name</label>
                                    <input type="text" class="form-control" id="txtStaffName" asp-for="StaffName">
                                    <div class="text-danger" id="errorStaffName"></div>
                                </div>
                            </div>
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtNic">Staff National IC</label>
                                    <input type="text" class="form-control" id="txtNic" asp-for="Nic">
                                    <div class="text-danger" id="errorNic"></div>
                                </div>
                            </div>
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtContactNo">Staff Contact No</label>
                                    <input type="text" class="form-control" id="txtContactNo" asp-for="ContactNo">
                                    <div class="text-danger" id="errorContactNo"></div>
                                </div>
                            </div>
                            <div class="col-md-6 mt-3">
                                <div class="form-group">
                                    <label for="txtStaffAddress">Staff Address</label>
                                    <input type="text" class="form-control" id="txtStaffAddress" asp-for="Address">
                                    <div class="text-danger" id="errorAddress"></div>
                                </div>
                            </div>
                            <div class="col-md-8 mt-3">
                                <input type="file" id="fileStaffAttachment" class="d-none">
                                <label for="fileStaffAttachment" class="btn btn-round btn-success btn-sm mt-0">
                                    <i class="fa fa-paperclip mr-1"></i> Upload File
                                </label>
                                <hr />
                                <div class="mt-3">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <td class="font-weight-bold" width="60%">File Name</td>
                                                <td class="font-weight-bold text-center" width="20%">View File</td>
                                                <td class="font-weight-bold text-center" width="20%">Remove</td>
                                            </tr>
                                        </thead>
                                        <tbody id="selectedImageList">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="col-md-4 mt-3">
                                <div class="form-inline float-right">
                                    <h4 class="mb-0 font-weight-bold">Enable User</h4>
                                    <label class="switch ml-2">
                                        <input type="checkbox" id="userSwitch">
                                        <span class="slider round"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-12 mt-3">
                                <div class="row justify-content-end">
                                    <div class="col-auto form-inline" id="progressBar">
                                        <img src="~/img/progress.gif" style="max-height: 41px;" class="mr-3" />
                                        <h5 class="align-bottom mb-0">Please Wait....</h5>
                                    </div>
                                    <div class="col-auto">
                                        <button type="button" class="btn btn-primary" onclick="getFieldDetails()">Submit</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="card h-100" id="pnlUser">
                    <div class="card-header card-header-primary">
                        <h4 class="card-title">User Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12 mt-3">
                                <div class="form-group">
                                    <label for="txtUsername">Username</label>
                                    <input type="text" class="form-control" id="txtUsername" asp-for="UserViewModel.UserName">
                                    <div class="text-danger" id="errorUserName"></div>
                                </div>
                            </div>
                            <div class="col-md-12 mt-3">
                                <div class="form-group">
                                    <label for="txtPassword">Password</label>
                                    <input type="text" class="form-control" id="txtPassword" asp-for="UserViewModel.Password">
                                    <div class="text-danger" id="errorPassword"></div>
                                </div>
                            </div>
                            <div class="col-md-12 mt-3">
                                <div class="form-group">
                                    <label for="txtConfirmPassword">Confirm Password</label>
                                    <input type="text" class="form-control" id="txtConfirmPassword" asp-for="UserViewModel.Password">
                                    <div class="text-danger" id="errorConfirmPassword"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    var fileObject = [];
    var fileCount = 0;

    $('#pnlUser').hide();
    $('#progressBar').hide();

    var IsUpdate = @ViewBag.IsUpdate;
    var staffId;
    var userId;
    var userCurrentStatus = 0;

    @if (ViewBag.IsUpdate == "true") {
        @:userCurrentStatus = 1;
        @:staffId = @Model.StaffId;
        if (Model.UserViewModel != null) {
            var userId = false || Model.UserViewModel.CurrentStatus == 1;

            if (userId) {
                @:userId = @Model.UserViewModel.UserId;
                @:$('#userSwitch').prop("checked", true);
                @:$('#pnlUser').show();
            }else {
            @:$('#txtUsername').val("");
            @:$('#txtPassword').val("");
            @:$('#txtConfirmPassword').val("");
        }
        }

         
        var attachmentCount = false || Model.StaffAttachmentList.Count > 0;
        if (attachmentCount) {
            foreach (var item in Model.StaffAttachmentList) {

                @:var baseFile = '@Html.Raw(item.AttachmentFile)';
                @:populateFileObjectArray(baseFile, "@item.AttachmentName");
            }
        }
    }

    function populateFileObjectArray(base64String, fileName) {

        var listHtml = `
                        <tr>
                            <td class="  p-1">`+ fileName + `</td>
                            <td class="text-center p-1">
                                <button type="button" rel="tooltip" class="btn btn-info btn-sm" onclick="openFileInNewTab('`+base64String+`');">
                                    <i class="material-icons">visibility</i>
                                </button>
                            </td>
                            <td class="text-center p-1">
                                <button type="button" rel="tooltip" class="btn btn-danger btn-sm" onclick="removeFileFromArray(`+ fileCount + `)">
                                    <i class="material-icons">clear</i>
                                </button>
                            </td>
                        </tr>
                        `;
        var obj = { count: fileCount, filesBase64: base64String, listHtml: listHtml, fileName: fileName };
        fileObject.push(obj);

        $('#selectedImageList').html(fileObject.map(e => e.listHtml).join(""));
        fileCount++;
    }

    $('input[id="fileStaffAttachment"]').change(function (e) {
        if (fileObject.length < 5) {
            populateFilesList(e.target.files[0]);
        } else {
            Swal.fire(
                'File Limit Reached!',
                'You cannot select more than 5 files!',
                'error'
            );
        }
    });

    function populateFilesList(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {
            var filesBase64 = reader.result;

            var listHtml = `
                            <tr>
                                <td class="  p-1">`+ file.name + `</td>
                                <td class="text-center p-1">
                                    <button type="button" rel="tooltip" class="btn btn-info btn-sm" onclick="openFileInNewTab('`+filesBase64+`');">
                                        <i class="material-icons">visibility</i>
                                    </button>
                                </td>
                                <td class="text-center p-1">
                                    <button type="button" rel="tooltip" class="btn btn-danger btn-sm" onclick="removeFileFromArray(`+ fileCount + `)">
                                        <i class="material-icons">clear</i>
                                    </button>
                                </td>
                            </tr>
                            `;

            var obj = { count: fileCount, filesBase64: filesBase64, listHtml: listHtml, fileName: file.name };
            fileObject.push(obj);

            $('#selectedImageList').html(fileObject.map(e => e.listHtml).join(""));
            fileCount++;
        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    function openFileInNewTab(file) {
        window.open(file);
    }

    function removeFileFromArray(fileNo) {

        fileObject = fileObject.filter(function (value, index, arr) {
            return value.count !== fileNo;
        });
        console.log(fileObject);
        $('#selectedImageList').html(fileObject.map(e => e.listHtml).join(""));

    }


    $('#userSwitch').unbind().click(function (e) {
        if (this.checked) {
            userCurrentStatus = 1;
            $('#pnlUser').fadeIn();
        } else {
            userCurrentStatus = 0;
            $('#pnlUser').fadeOut();
            if (!IsUpdate) {
                $('#txtUsername').val("");
                $('#txtPassword').val("");
                $('#txtConfirmPassword').val("");
            }
        }
    });

    var model = {};

    function getFieldDetails() {
        var staffName = $('#txtStaffName').val();
        var nic = $('#txtNic').val();
        var address = $('#txtStaffAddress').val();
        var contactNo = $('#txtContactNo').val();

        var username = $('#txtUsername').val();
        var password = $('#txtPassword').val();


        var filesList = [];
        for (var i = 0; i < fileObject.length; i++) {
            filesList.push({ "AttachmentName": fileObject[i].fileName, "AttachmentFile": fileObject[i].filesBase64 });
        }


        if (IsUpdate) {
            model = {
                "StaffId": staffId,
                "StaffName": staffName,
                "Nic": nic,
                "Address": address,
                "ContactNo": contactNo,
                "StaffAttachmentList": filesList,
                "UserViewModel": {
                    "UserId":userId, "UserName": username, "Password": password, "CurrentStatus":userCurrentStatus
                }
            };
            SaveChanges('Update');
        } else {
            model = {
                "StaffName": staffName,
                "Nic": nic,
                "Address": address,
                "ContactNo": contactNo,
                "StaffAttachmentList": filesList,
                "UserViewModel": {
                   "UserName": username, "Password": password, "CurrentStatus":userCurrentStatus
                }
            };
            SaveChanges('Create');
        }
    }

    function SaveChanges(type) {
        $('#progressBar').show();
        $.ajax({
            url: localStorage.apiLink + "api/Staff/" + type,
            type: 'POST',
            data: JSON.stringify(model),
            contentType: 'application/json',
            success: function (data, textStatus, xhr) {
                if (data === true) {
                    $('#progressBar').hide();
                    Swal.fire(
                        'Success',
                        'Changes Saved Successfully',
                        'success'
                    );
                    Swal.fire({
                        title: 'Success',
                        text: "Changes Saved Successfully!",
                        icon: 'success',
                        showCancelButton: false,
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK!'
                    }).then((result) => {
                        if (result.value) {
                            window.location.replace(localStorage.apiLink + "Staff/StaffView");
                        }
                    });
                } else {
                    Swal.fire(
                        'Oops...',
                        'Something went wrong!',
                        'error'
                    );
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                $('#progressBar').hide(); 

                const objArr = [
                    [xhr.responseJSON.errors.StaffName, '#errorStaffName'],
                    [xhr.responseJSON.errors.Nic, '#errorNic'],
                    [xhr.responseJSON.errors.ContactNo, '#errorContactNo'],
                    [xhr.responseJSON.errors.Address, '#errorAddress'],
                    [xhr.responseJSON.errors.UserName, '#errorUserName'],
                    [xhr.responseJSON.errors.Password, '#errorPassword']
                ];

                for (let i = 0; i < objArr.length; i++) {
                    $(objArr[i][1]).html('');
                    $(objArr[i][1]).parent().removeClass('has-danger').addClass("has-success").find('span').text('done'); 
                    if (objArr[i][0] != null) {
                        $(objArr[i][1]).parent().find('span').remove();
                        for (let j = 0; j < objArr[i][0].length; j++) {
                            $(objArr[i][1]).append(`<h6 class="mb-0 text-capitalize">${objArr[i][0][j]}</h6> \n`); 
                            $(objArr[i][1]).parent().removeClass('has-success').addClass("has-danger")
                                .append(`<span class="material-icons form-control-feedback">clear</span>`);
                        }
                    }
                }

//                objName = xhr.responseJSON.errors.StaffName;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorStaffName').html(html);
//                    html = '';
//                }
//
//                objName = xhr.responseJSON.errors.Nic;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorNic').html(html);
//                    html = '';
//                }
//
//                objName = xhr.responseJSON.errors.ContactNo;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorContactNo').html(html);
//                    html = '';
//                }
//
//                objName = xhr.responseJSON.errors.Address;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorAddress').html(html);
//                    html = '';
//                }
//
//                objName = xhr.responseJSON.errors.UserName;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorUserName').html(html);
//                    html = '';
//                }
//
//                objName = xhr.responseJSON.errors.Password;
//                if (objName != null) {
//                    for (let i = 0; i < objName.length; i++) {
//                        html += `<h6 class="mb-0 text-capitalize">${objName[i]}</h6> \n`;
//                    }
//                    $('#errorPassword').html(html);
//                    html = '';
//                }

            }
        });
    }


</script>



