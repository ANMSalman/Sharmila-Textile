// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sharmila_Textile_WebApp.Data;

namespace Sharmila_Textile_WebApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20200303180733_summaryv2")]
    partial class summaryv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.BalanceSheet", b =>
                {
                    b.Property<long>("BalanceSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BALANCE_SHEET_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BankBalance")
                        .HasColumnName("BANK_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InHandCash")
                        .HasColumnName("IN_HAND_CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InHandCheque")
                        .HasColumnName("IN_HAND_CHEQUE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InHold")
                        .HasColumnName("IN_HOLD")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("BalanceSheetId");

                    b.ToTable("BALANCE_SHEET");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.BankDeposit", b =>
                {
                    b.Property<long>("BankDepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANK_DEPOSIT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .HasColumnName("CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InHandCash")
                        .HasColumnName("IN_HAND_CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.HasKey("BankDepositId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("BANK_DEPOSIT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.BankDepositThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("BankDepositId")
                        .HasColumnName("BANK_DEPOSIT_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "BankDepositId");

                    b.HasIndex("BankDepositId");

                    b.ToTable("BANK_DEPOSIT_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ChequeStatus", b =>
                {
                    b.Property<long>("ChequeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CHEQUE_STATUS_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnName("STATUS_NAME")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StatusType")
                        .HasColumnName("STATUS_TYPE")
                        .HasColumnType("varchar(10)");

                    b.HasKey("ChequeStatusId");

                    b.ToTable("CHEQUE_STATUS");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Collection", b =>
                {
                    b.Property<long>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COLLECTION_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .HasColumnName("CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Cheque")
                        .HasColumnName("CHEQUE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CollectionType")
                        .HasColumnName("COLLECTION_TYPE")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Returns")
                        .HasColumnName("RETURNS")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("TOTAL_AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CollectionId");

                    b.HasIndex("CollectionType");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.ToTable("COLLECTION");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CollectionOwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("CollectionId")
                        .HasColumnName("COLLECTION_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("COLLECTION_OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CollectionThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("CollectionId")
                        .HasColumnName("COLLECTION_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("COLLECTION_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnName("CURRENT_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CurrentStatus")
                        .HasColumnName("CURRENT_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnName("CUSTOMER_NAME")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeAddress")
                        .HasColumnName("HOME_ADDRESS")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("HomeLandline")
                        .HasColumnName("HOME_LAND_LINE")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Mobile")
                        .HasColumnName("MOBILE")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("NIC")
                        .HasColumnName("NIC")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnName("OFFICE_ADDRESS")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OfficeLandline")
                        .HasColumnName("OFFICE_LAND_LINE")
                        .HasColumnType("nchar(10)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnName("OPENING_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("CUSTOMER");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccount", b =>
                {
                    b.Property<long>("CustomerAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUSTOMER_ACCOUNTS_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountType")
                        .HasColumnName("ACCOUNT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnName("AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("InHandCash")
                        .HasColumnName("IN_HAND_CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.HasKey("CustomerAccountId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.ToTable("CUSTOMER_ACCOUNT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccountOwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerAccountId")
                        .HasColumnName("CUSTOMER_ACCOUNTS_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId", "CustomerAccountId");

                    b.HasIndex("CustomerAccountId");

                    b.ToTable("CUSTOMER_ACCOUNT_OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccountThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerAccountId")
                        .HasColumnName("CUSTOMER_ACCOUNTS_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "CustomerAccountId");

                    b.HasIndex("CustomerAccountId");

                    b.ToTable("CUSTOMER_ACCOUNT_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAttachment", b =>
                {
                    b.Property<long>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ATTACHMENT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasColumnName("ATTACHMENT_NAME")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnName("ATTACHMENT_PATH")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnName("CUSTOMER_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .HasColumnName("MIME_TYPE")
                        .HasColumnType("varchar(200)");

                    b.HasKey("AttachmentId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CUSTOMER_ATTACHMENT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Expense", b =>
                {
                    b.Property<long>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EXPENSE_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .HasColumnName("CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Cheque")
                        .HasColumnName("CHEQUE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("InHandCash")
                        .HasColumnName("IN_HAND_CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PaymentType")
                        .HasColumnName("PAYMENT_TYPE")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("TOTAL_AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("EXPENSE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ExpenseOwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpenseId")
                        .HasColumnName("EXPENSE_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId", "ExpenseId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("EXPENSE_OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ExpenseThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpenseId")
                        .HasColumnName("EXPENSE_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "ExpenseId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("EXPENSE_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.OwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnName("AMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Bank")
                        .HasColumnName("BANK")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Branch")
                        .HasColumnName("BRANCH")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("ChequeCode")
                        .HasColumnName("CHEQUE_CODE")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("DUE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId");

                    b.HasIndex("Status");

                    b.ToTable("OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.OwnChequeActionLog", b =>
                {
                    b.Property<long>("OwnChequeActionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OWN_CHEQUE_ACTION_LOG_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ChequeStatusId")
                        .HasColumnName("CHEQUE_STATUS_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime");

                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("RecipientId")
                        .HasColumnName("RECIPIENT_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReferenceId")
                        .HasColumnName("REFERENCE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnName("USER_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeActionLogId");

                    b.HasIndex("ChequeStatusId");

                    b.HasIndex("OwnChequeId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("UserId");

                    b.ToTable("OWN_CHEQUE_ACTION_LOG");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Recipient", b =>
                {
                    b.Property<long>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RECIPIENT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipientType")
                        .HasColumnName("RECIPIENT_TYPE")
                        .HasColumnType("varchar(70)");

                    b.HasKey("RecipientId");

                    b.ToTable("RECIPIENT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Staff", b =>
                {
                    b.Property<long>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STAFF_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnName("CONTACT_NO")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CurrentStatus")
                        .HasColumnName("CURRENT_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("Nic")
                        .HasColumnName("NIC")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("StaffName")
                        .HasColumnName("STAFF_NAME")
                        .HasColumnType("varchar(50)");

                    b.HasKey("StaffId");

                    b.ToTable("STAFF");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.StaffAttachment", b =>
                {
                    b.Property<long>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ATTACHMENT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasColumnName("ATTACHMENT_NAME")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnName("ATTACHMENT_PATH")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MimeType")
                        .HasColumnName("MIME_TYPE")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("StaffId")
                        .HasColumnName("STAFF_ID")
                        .HasColumnType("bigint");

                    b.HasKey("AttachmentId");

                    b.HasIndex("StaffId");

                    b.ToTable("STAFF_ATTACHMENT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Summary", b =>
                {
                    b.Property<long>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUMMARY_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountableBankDeposit")
                        .HasColumnName("ACCOUNTABLE_BANK_DEPOSIT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AccountableCollection")
                        .HasColumnName("ACCOUNTABLE_COLLECTION")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AccountableExpense")
                        .HasColumnName("ACCOUNTABLE_EXPENSE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AccountablePayment")
                        .HasColumnName("ACCOUNTABLE_PAYMENT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BttBills")
                        .HasColumnName("BTT_BILLS")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CashBalance")
                        .HasColumnName("CASH_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ChequeBalance")
                        .HasColumnName("CHEQUE_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NormalBills")
                        .HasColumnName("NORMAL_BILLS")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<decimal>("SummaryTotal")
                        .HasColumnName("SUMMARY_TOTAL")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("TOTAL_AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalBankDeposit")
                        .HasColumnName("TOTAL_BANK_DEPOSIT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalCollection")
                        .HasColumnName("TOTAL_COLLECTION")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalExpense")
                        .HasColumnName("TOTAL_EXPENSE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnName("TOTAL_PAYMENT")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("SummaryId");

                    b.ToTable("SUMMARY");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUPPLIER_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("varchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnName("CURRENT_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CurrentStatus")
                        .HasColumnName("CURRENT_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("Landline")
                        .HasColumnName("LANDLINE")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Mobile")
                        .HasColumnName("MOBILE")
                        .HasColumnType("nchar(10)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnName("OPENING_BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SupplierName")
                        .HasColumnName("SUPPLIER_NAME")
                        .HasColumnType("varchar(50)");

                    b.HasKey("SupplierId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("SUPPLIER");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccount", b =>
                {
                    b.Property<long>("SupplierAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUPPLIER_ACCOUNTS_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountType")
                        .HasColumnName("ACCOUNT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnName("AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnName("SUPPLIER_ID")
                        .HasColumnType("bigint");

                    b.HasKey("SupplierAccountId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SupplierId");

                    b.ToTable("SUPPLIER_ACCOUNT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccountOwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierAccountId")
                        .HasColumnName("SUPPLIER_ACCOUNTS_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId", "SupplierAccountId");

                    b.HasIndex("SupplierAccountId");

                    b.ToTable("SUPPLIER_ACCOUNT_OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccountThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierAccountId")
                        .HasColumnName("SUPPLIER_ACCOUNTS_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "SupplierAccountId");

                    b.HasIndex("SupplierAccountId");

                    b.ToTable("SUPPLIER_ACCOUNT_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAttachment", b =>
                {
                    b.Property<long>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ATTACHMENT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasColumnName("ATTACHMENT_NAME")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnName("ATTACHMENT_PATH")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MimeType")
                        .HasColumnName("MIME_TYPE")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("SupplierId")
                        .HasColumnName("SUPPLIER_ID")
                        .HasColumnType("bigint");

                    b.HasKey("AttachmentId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SUPPLIER_ATTACHMENT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPayment", b =>
                {
                    b.Property<long>("SupplierPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUPPLIER_PAYMENT_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .HasColumnName("CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Cheque")
                        .HasColumnName("CHEQUE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("InHandCash")
                        .HasColumnName("IN_HAND_CASH")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("PaymentType")
                        .HasColumnName("PAYMENT_TYPE")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Purchase")
                        .HasColumnName("PURCHASE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Returns")
                        .HasColumnName("RETURNS")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnName("SUPPLIER_ID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnName("TOTAL_AMOUNT")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("SupplierPaymentId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PaymentType");

                    b.HasIndex("SupplierId");

                    b.ToTable("SUPPLIER_PAYMENT");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPaymentOwnCheque", b =>
                {
                    b.Property<long>("OwnChequeId")
                        .HasColumnName("OWN_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierPaymentId")
                        .HasColumnName("SUPPLIER_PAYMENT_ID")
                        .HasColumnType("bigint");

                    b.HasKey("OwnChequeId", "SupplierPaymentId");

                    b.HasIndex("SupplierPaymentId");

                    b.ToTable("SUPPLIER_PAYMENT_OWN_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPaymentThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierPaymentId")
                        .HasColumnName("SUPPLIER_PAYMENT_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId", "SupplierPaymentId");

                    b.HasIndex("SupplierPaymentId");

                    b.ToTable("SUPPLIER_PAYMENT_THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", b =>
                {
                    b.Property<long>("ThirdPartyChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnName("AMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Bank")
                        .HasColumnName("BANK")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Branch")
                        .HasColumnName("BRANCH")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("ChequeCode")
                        .HasColumnName("CHEQUE_CODE")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("DUE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("From")
                        .HasColumnName("FROM")
                        .HasColumnType("varchar(70)");

                    b.Property<long?>("FromReferenceId")
                        .HasColumnName("FROM_REFERENCE_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromReferenceNote")
                        .HasColumnName("FROM_REFERENCE_NOTE")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnName("REMARK")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeId");

                    b.HasIndex("Status");

                    b.ToTable("THIRD_PARTY_CHEQUE");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ThirdPartyChequeActionLog", b =>
                {
                    b.Property<long>("ThirdPartyChequeActionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("THIRD_PARTY_CHEQUE_ACTION_LOG_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ChequeStatusId")
                        .HasColumnName("CHEQUE_STATUS_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime");

                    b.Property<long?>("RecipientId")
                        .HasColumnName("RECIPIENT_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReferenceId")
                        .HasColumnName("REFERENCE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("ThirdPartyChequeId")
                        .HasColumnName("THIRD_PARTY_CHEQUE_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnName("USER_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ThirdPartyChequeActionLogId");

                    b.HasIndex("ChequeStatusId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("ThirdPartyChequeId");

                    b.HasIndex("UserId");

                    b.ToTable("THIRD_PARTY_CHEQUE_ACTION_LOG");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USER_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentStatus")
                        .HasColumnName("CURRENT_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(50)");

                    b.Property<long>("StaffId")
                        .HasColumnName("STAFF_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserId");

                    b.HasIndex("StaffId");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.BankDeposit", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.BankDepositThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.BankDeposit", "BankDeposit")
                        .WithMany("BankDepositThirdPartyCheques")
                        .HasForeignKey("BankDepositId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("BankDepositThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Collection", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("CollectionType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CollectionOwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Collection", "Collection")
                        .WithMany("CollectionOwnCheques")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany("CollectionOwnCheques")
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CollectionThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Collection", "Collection")
                        .WithMany("CollectionThirdPartyCheques")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("CollectionThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Customer", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccount", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccountOwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.CustomerAccount", "CustomerAccount")
                        .WithMany("CustomerAccountOwnCheques")
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany("CustomerAccountOwnCheques")
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAccountThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.CustomerAccount", "CustomerAccount")
                        .WithMany("CustomerAccountThirdPartyCheques")
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("CustomerAccountThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.CustomerAttachment", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Expense", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ExpenseOwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Expense", "Expense")
                        .WithMany("ExpenseOwnCheques")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany("ExpenseOwnCheques")
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ExpenseThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Expense", "Expense")
                        .WithMany("ExpenseThirdPartyCheques")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("ExpenseThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.OwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.OwnChequeActionLog", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("ChequeStatusId");

                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany()
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.StaffAttachment", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.Supplier", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccount", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccountOwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany("SupplierAccountOwnCheques")
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.SupplierAccount", "SupplierAccount")
                        .WithMany("SupplierAccountOwnCheques")
                        .HasForeignKey("SupplierAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAccountThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.SupplierAccount", "SupplierAccount")
                        .WithMany("SupplierAccountThirdPartyCheques")
                        .HasForeignKey("SupplierAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("SupplierAccountThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierAttachment", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPayment", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("PaymentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPaymentOwnCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.OwnCheque", "OwnCheque")
                        .WithMany("SupplierPaymentOwnCheques")
                        .HasForeignKey("OwnChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.SupplierPayment", "SupplierPayment")
                        .WithMany("SupplierPaymentOwnCheques")
                        .HasForeignKey("SupplierPaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.SupplierPaymentThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.SupplierPayment", "SupplierPayment")
                        .WithMany("SupplierPaymentThirdPartyCheques")
                        .HasForeignKey("SupplierPaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany("SupplierPaymentThirdPartyCheques")
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.ThirdPartyChequeActionLog", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.ChequeStatus", "ChequeStatus")
                        .WithMany()
                        .HasForeignKey("ChequeStatusId");

                    b.HasOne("Sharmila_Textile_WebApp.Models.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Sharmila_Textile_WebApp.Models.ThirdPartyCheque", "ThirdPartyCheque")
                        .WithMany()
                        .HasForeignKey("ThirdPartyChequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sharmila_Textile_WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sharmila_Textile_WebApp.Models.User", b =>
                {
                    b.HasOne("Sharmila_Textile_WebApp.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
